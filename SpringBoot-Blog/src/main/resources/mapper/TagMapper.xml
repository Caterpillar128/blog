<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyj.dao.TagMapper">

    <insert id="saveTag" parameterType="Tag">
         insert into t_tag(id, name) values(#{id}, #{name})
     </insert>

    <select id="getTagById" parameterType="long" resultType="Tag">
         select * from t_tag where id=#{id}
     </select>

    <select id="listTag" resultType="Tag">
         select * from t_tag
     </select>

    <update id="updateTag" parameterType="Tag" >
         update t_tag set name = #{name} where id=#{id}
     </update>

    <delete id="deleteTagById" parameterType="long">
         delete from t_tag where id=#{id}
     </delete>

    <select id="getTagByName" parameterType="string" resultType="Tag">
         select * from t_tag where name=#{name}
     </select>


    <!-- 查询前10 的 类型 -->
    <select id="queryTagBefore" parameterType="int" resultType="Tag">
        SELECT t.id, t.name, COUNT(t.id) AS tagCount
        FROM t_tag t , t_blog_tags bt WHERE bt.tag_id = t.id
        GROUP BY t.id, t.name ORDER BY tagCount DESC LIMIT 0, #{length}
    </select>

    <!--两个id可能会相冲，取别名即可-->
    <resultMap id="tagMap" type="Tag">
        <id property="id" column="tid"/>
        <result property="name" column="tname"/>
        <collection property="blogs" ofType="Blog">
            <id property="id" column="bid"/>
            <result property="title" column="title"/>
        </collection>
    </resultMap>
    <select id="getTagToBlog" resultMap="tagMap">
--         select t.id tid, t.name, b.id bid, b.title
--         from t_tag t, t_blog b, t_blog_tags bt
--         where t.id = bt.tag_id and b.id = bt.blog_id
        select t.id tid, t.name tname, btb.bid, btb.title from t_tag t left join (
                select  bt.tag_id , b.id bid, b.title , b.views from t_blog_tags bt, t_blog b where bt.blog_id = b.id
            ) as btb on t.id = btb.tag_id
    </select>

</mapper>